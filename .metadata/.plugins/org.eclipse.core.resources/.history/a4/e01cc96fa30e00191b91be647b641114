package ie.gmit.sw;

import java.io.File;
import java.io.FilenameFilter;
import java.util.concurrent.ArrayBlockingQueue;
import java.util.concurrent.BlockingQueue;

public class Processor {
  private volatile int fileCount;

  public void processSubjectFiles(String dir) {
    
    File[] files = new File(dir).listFiles(new FilenameFilter() {
      public boolean accept(File current, String name) {
        return new File(current, name).isFile();
      }
    });
    
    fileCount = files.length;
    System.out.println(fileCount);
    
    BlockingQueue<Word> queue = new ArrayBlockingQueue<Word>(1000);

    for(File f : files) {
      new Thread(new FileParser(queue, f)).start();
    }
    
    Thread t11 = new Thread(new ShingleProcessor(queue, fileCount));
    t11.start();
    try {
      t11.join();
    } catch (InterruptedException e) {
      // TODO Auto-generated catch block
      e.printStackTrace();
    }
  }
}
